#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –¥–ª—è CodeCollector
Config - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫, ConfigManager - –ø–∞—Ä—Å–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
"""

import sys
from dataclasses import dataclass
from typing import Optional
from codecollector.models import ProjectSettings


@dataclass
class Config:
    """
    –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    
    –ê—Ç—Ä–∏–±—É—Ç—ã:
    - interactive: bool - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤
    - sort_by_time: bool - —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    - markdown_format: bool - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
    - show_structure: bool - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    - source_dir: Optional[str] - –∏—Å—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    - output_file: Optional[str] - –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
    """
    interactive: bool = False
    sort_by_time: bool = False
    markdown_format: bool = False
    show_structure: bool = False
    remote_mode: bool = False  # –ù–û–í–û–ï –ü–û–õ–ï
    source_dir: Optional[str] = None
    output_file: Optional[str] = None


class ConfigManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    –ü–∞—Ä—Å–∏—Ç CLI –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    
    –ú–µ—Ç–æ–¥—ã:
    - parse_cli_args() -> Config: –ü–∞—Ä—Å–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    - merge_with_saved_settings(config, project_settings) -> Config: –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏
    - interactive_config_setup(config, saved_settings_exist) -> Config: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    - show_applied_config(config, from_settings): –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ–Ω—è–µ–º—ã–µ —Ñ–ª–∞–≥–∏
    """
    
    @staticmethod
    def parse_cli_args() -> Config:
        """–ü–∞—Ä—Å–∏—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
        config = Config()
        
        i = 1
        while i < len(sys.argv):
            arg = sys.argv[i]
            
            if arg in ['-i', '--interactive']:
                config.interactive = True
            elif arg in ['-t', '--time', '--sort-time']:
                config.sort_by_time = True
            elif arg in ['--no-time']:
                config.sort_by_time = False
            elif arg in ['-m', '--markdown']:
                config.markdown_format = True
            elif arg in ['--no-markdown']:
                config.markdown_format = False
            elif arg in ['-s', '--structure']:
                config.show_structure = True
            elif arg in ['--no-structure']:
                config.show_structure = False
            elif arg in ['-r', '--remote']:  # –ù–û–í–´–ô –§–õ–ê–ì
                config.remote_mode = True
            elif not arg.startswith('-'):
                # –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
                if config.source_dir is None:
                    config.source_dir = arg
                elif config.output_file is None:
                    config.output_file = arg
            
            i += 1
        
        return config
    
    @staticmethod
    def merge_with_saved_settings(config: Config, project_settings: ProjectSettings) -> Config:
        """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç CLI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
        saved_settings = project_settings.load_settings()
        
        if not saved_settings:
            return config
        
        saved_preferences = saved_settings.get('preferences', {})
        print(f"üîÑ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ '{saved_settings.get('project_name', 'Unknown')}'")
        
        # CLI —Ñ–ª–∞–≥–∏ –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        if not any(arg in sys.argv for arg in ['-t', '--time', '--sort-time', '--no-time']):
            config.sort_by_time = saved_preferences.get('sort_by_time', config.sort_by_time)
        
        if not any(arg in sys.argv for arg in ['-m', '--markdown', '--no-markdown']):
            config.markdown_format = saved_preferences.get('markdown_format', config.markdown_format)
        
        if not any(arg in sys.argv for arg in ['-s', '--structure', '--no-structure']):
            config.show_structure = saved_preferences.get('show_structure', config.show_structure)
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ
        if not config.output_file:
            config.output_file = saved_preferences.get('default_output')
        
        return config
    
    @staticmethod
    def interactive_config_setup(config: Config, saved_settings_exist: bool = False) -> Config:
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
        if not config.output_file:
            default_ext = ".md" if config.markdown_format else ".txt"
            default_output = f"collected_files{default_ext}"
            
            output_file = input(f"–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '{default_output}'): ").strip()
            config.output_file = output_file if output_file else default_output
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
        if not config.interactive and '--interactive' not in sys.argv and '-i' not in sys.argv:
            choice = input("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤? (y/N): ").strip().lower()
            config.interactive = choice in ['y', 'yes', '–¥', '–¥–∞']
        
        # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫, —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
        if not saved_settings_exist:
            if not any(arg in sys.argv for arg in ['-t', '--time', '--sort-time', '--no-time']):
                choice = input("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)? (y/N): ").strip().lower()
                config.sort_by_time = choice in ['y', 'yes', '–¥', '–¥–∞']
            
            if not any(arg in sys.argv for arg in ['-m', '--markdown', '--no-markdown']):
                choice = input("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown —Ñ–æ—Ä–º–∞—Ç? (y/N): ").strip().lower()
                config.markdown_format = choice in ['y', 'yes', '–¥', '–¥–∞']
                
                if config.markdown_format and not any(arg in sys.argv for arg in ['-s', '--structure', '--no-structure']):
                    choice = input("–í–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞? (y/N): ").strip().lower()
                    config.show_structure = choice in ['y', 'yes', '–¥', '–¥–∞']
        
        return config
    
    @staticmethod
    def show_applied_config(config: Config, from_settings: bool = False):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ–Ω—è–µ–º—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        flags = []
        
        if config.sort_by_time:
            flags.append('-t')
        if config.markdown_format:
            flags.append('-m')
        if config.show_structure:
            flags.append('-s')
        
        if flags:
            flag_str = ' '.join(flags)
            source = "—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏" if from_settings else "CLI –∞—Ä–≥—É–º–µ–Ω—Ç—ã"
            print(f"üìã –ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ —Ñ–ª–∞–≥–∏: {flag_str} ({source})")
        else:
            print("üìã –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")