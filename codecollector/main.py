#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
CodeCollector - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞ –≤ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
"""

import os
import sys
from pathlib import Path
from typing import List

# –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from codecollector.config import Config, ConfigManager
from codecollector.models import ProjectSettings
from codecollector.collector import CodeCollector
from codecollector.selector import InteractiveSelector
from codecollector.writers import MarkdownWriter
from codecollector.utils import KeyboardHandler


class CodeCollectorApp:
    """
    –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è CodeCollector
    –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
    
    –ê—Ç—Ä–∏–±—É—Ç—ã:
    - config: Config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - project_settings: ProjectSettings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    - collector: CodeCollector - —Å–±–æ—Ä—â–∏–∫ —Ñ–∞–π–ª–æ–≤
    
    –ú–µ—Ç–æ–¥—ã:
    - run() -> int: –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - _determine_mode(saved_settings) -> str: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
    - _get_source_directory() -> tuple: –ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    - _validate_source_path(source_path, show_info) -> bool: –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –ø—É—Ç—å
    - _run_setup_wizard() -> Config: –ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    - _apply_quick_defaults() -> Config: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∂–∏–º–∞
    - _reset_project_settings(): –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    - _interactive_file_selection(files, root_path) -> List[Path]: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä
    - _save_user_preferences(selected_files): –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    - _write_output(files, root_path): –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    """
    
    def __init__(self):
        self.config: Config = None
        self.project_settings: ProjectSettings = None
        self.collector: CodeCollector = None
        
    def run(self) -> int:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π"""
        try:
            print("üöÄ CodeCollector")
            print("=" * 30)
            
            # 1. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
            self.config = ConfigManager.parse_cli_args()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            source_dir, showed_prompt = self._get_source_directory()
            source_path = Path(source_dir)
            
            if not self._validate_source_path(source_path, not showed_prompt):
                return 1
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
            self.project_settings = ProjectSettings(source_path)
            saved_settings = self.project_settings.load_settings()
            
            # –û–ü–†–ï–î–ï–õ–Ø–ï–ú –†–ï–ñ–ò–ú –†–ê–ë–û–¢–´
            mode = self._determine_mode(saved_settings)
            
            if mode == "FORCE_SETUP":
                # codecollector --setup
                self.config = self._run_setup_wizard()
                
            elif mode == "FORCE_QUICK":
                # codecollector --quick
                self.config = self._apply_quick_defaults()
                
            elif mode == "RESET_AND_SETUP":
                # codecollector --reset
                self._reset_project_settings()
                self.config = self._run_setup_wizard()
                
            elif mode == "QUICK_RUN":
                # –ï–°–¢–¨ –ù–ê–°–¢–†–û–ô–ö–ò - –°–†–ê–ó–£ –í –î–ï–†–ï–í–û!
                self.config = ConfigManager.merge_with_saved_settings(self.config, self.project_settings)
                print(f"üîÑ –ü—Ä–æ–µ–∫—Ç '{saved_settings.get('project_name')}' | ", end="")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
                flags = []
                if self.config.sort_by_time:
                    flags.append("–ø–æ –≤—Ä–µ–º–µ–Ω–∏")
                else:
                    flags.append("–ø–æ –∏–º–µ–Ω–∏")
                    
                if saved_settings.get('preferences', {}).get('interactive_mode', True):
                    flags.append("–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π")
                    self.config.interactive = True
                else:
                    flags.append("–≤—Å–µ —Ñ–∞–π–ª—ã")
                    self.config.interactive = False
                    
                print(" + ".join(flags))
                
            else:
                # mode == "FIRST_TIME_SETUP"  
                self.config = self._run_setup_wizard()
            
            # 2. –°–ë–û–† –§–ê–ô–õ–û–í
            self.collector = CodeCollector(source_path, self.config)
            collected_files = self.collector.scan_and_collect()
            
            if not collected_files:
                print("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
                return 0
            
            # 3. –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –í–´–ë–û–† (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω)
            if self.config.interactive:
                # –°–†–ê–ó–£ –í –î–ï–†–ï–í–û –ë–ï–ó –õ–ò–®–ù–ò–• –í–û–ü–†–û–°–û–í
                selected_files = self._interactive_file_selection(collected_files, source_path)
                if not selected_files:
                    print("‚ùå –§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                    return 0
                collected_files = selected_files
            
            # 4. –ó–ê–ü–ò–°–¨ –†–ï–ó–£–õ–¨–¢–ê–¢–ê (–∂–µ—Å—Ç–∫–æ collected_files.md)
            self.config.output_file = "collected_files.md"
            self.config.markdown_format = True
            self.config.show_structure = True
            self._write_output(collected_files, source_path)
            
            # 5. –°–û–•–†–ê–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö
            self._save_user_preferences(collected_files)
            
            # 6. –£–°–ü–ï–®–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï
            print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! ‚Üí collected_files.md")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            try:
                file_size = Path("collected_files.md").stat().st_size
                if file_size > 1024 * 1024:
                    size_str = f"{file_size / (1024 * 1024):.1f} MB"
                elif file_size > 1024:
                    size_str = f"{file_size / 1024:.1f} KB"
                else:
                    size_str = f"{file_size} bytes"
                print(f"üìä –†–∞–∑–º–µ—Ä: {size_str}")
            except:
                pass
            
            return 0
            
        except KeyboardInterrupt:
            print("\n‚ö†Ô∏è  –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞")
            return 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            if "--debug" in sys.argv:
                import traceback
                traceback.print_exc()
            return 1
    
    def _determine_mode(self, saved_settings) -> str:
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        if '--setup' in sys.argv:
            return "FORCE_SETUP"
        elif '--quick' in sys.argv:
            return "FORCE_QUICK"  
        elif '--reset' in sys.argv:
            return "RESET_AND_SETUP"
        elif saved_settings:
            return "QUICK_RUN"  # –ï–°–¢–¨ –ù–ê–°–¢–†–û–ô–ö–ò = –°–†–ê–ó–£ –†–ê–ë–û–¢–ê–¢–¨
        else:
            return "FIRST_TIME_SETUP"
    
    def _get_source_directory(self) -> tuple[str, bool]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å —Ñ–ª–∞–≥–æ–º –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —É–∫–∞–∑–∞–Ω–∞ –≤ CLI
        if self.config.source_dir:
            return self.config.source_dir, False
        
        # –ï—Å–ª–∏ –ù–ï —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        if not getattr(self.config, 'remote_mode', False):
            current_dir = os.getcwd()
            return current_dir, False
        
        # –¢–æ–ª—å–∫–æ –≤ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        print("üìÅ –í—ã–±–æ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        source_dir = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–∏–ª–∏ Enter –¥–ª—è —Ç–µ–∫—É—â–µ–π): ").strip()
        return (source_dir if source_dir else os.getcwd()), True
    
    def _validate_source_path(self, source_path: Path, show_info: bool = True) -> bool:
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å"""
        if not source_path.exists():
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {source_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return False
        
        if not source_path.is_dir():
            print(f"‚ùå –û—à–∏–±–∫–∞: {source_path} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π!")
            return False
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if show_info:
            print(f"‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {source_path}")
        
        return True
    
    def _run_setup_wizard(self) -> Config:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –∏–ª–∏ --setup)"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...")
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        print("‚è∞ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤? [Enter=–ü–æ –≤—Ä–µ–º–µ–Ω–∏ / Esc=–ü–æ –∏–º–µ–Ω–∏]: ", end="", flush=True)
        key = KeyboardHandler.get_key()
        if key == 'ENTER':
            self.config.sort_by_time = True
            print("‚úÖ –ü–û –í–†–ï–ú–ï–ù–ò")
        else:
            self.config.sort_by_time = False
            print("‚ùå –ü–û –ò–ú–ï–ù–ò")
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        print("üéØ –í—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤? [Enter=–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π / Esc=–í—Å–µ —Ñ–∞–π–ª—ã]: ", end="", flush=True)
        key = KeyboardHandler.get_key()
        if key == 'ENTER':
            self.config.interactive = True
            print("‚úÖ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô")
        else:
            self.config.interactive = False
            print("‚ùå –í–°–ï –§–ê–ô–õ–´")
        
        print("üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        return self.config
    
    def _apply_quick_defaults(self) -> Config:
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –±—ã—Å—Ç—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        print("‚ö° –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º - –≤—Å–µ —Ñ–∞–π–ª—ã")
        self.config.sort_by_time = False
        self.config.interactive = False
        self.config.markdown_format = True
        self.config.show_structure = True
        return self.config
    
    def _reset_project_settings(self):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
        settings_file = self.project_settings.settings_file
        if settings_file.exists():
            settings_file.unlink()
            print("üóëÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã")
    
    def _interactive_file_selection(self, files: List[Path], root_path: Path) -> List[Path]:
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
        saved_files = []
        saved_folders = []
        
        settings = self.project_settings.load_settings()
        if settings:
            saved_files, saved_folders = self.project_settings.filter_existing_paths(
                settings.get('selected_files', []),
                settings.get('selected_folders', [])
            )
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        project_info = {
            'name': self.project_settings.project_name,
            'settings': self._get_settings_string()
        }
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞
        selector = InteractiveSelector(files, root_path, saved_files, saved_folders, project_info)
        selected_files = selector.run()
        
        return selected_files
    
    def _get_settings_string(self) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
        flags = []
        if self.config.sort_by_time:
            flags.append("–ø–æ –≤—Ä–µ–º–µ–Ω–∏")
        else:
            flags.append("–ø–æ –∏–º–µ–Ω–∏")
        
        if self.config.interactive:
            flags.append("–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π")
        else:
            flags.append("–≤—Å–µ —Ñ–∞–π–ª—ã")
        
        return " + ".join(flags)
    
    def _save_user_preferences(self, selected_files: List[Path]):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"""
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ–º –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
        selected_folders_paths = []
        
        preferences = {
            'interactive_mode': self.config.interactive,
            'sort_by_time': self.config.sort_by_time,
            'markdown_format': self.config.markdown_format,
            'show_structure': self.config.show_structure,
        }
        
        self.project_settings.save_settings(preferences, selected_files, selected_folders_paths)
    
    def _write_output(self, files: List[Path], root_path: Path):
        """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª (–≤—Å–µ–≥–¥–∞ Markdown)"""
        writer = MarkdownWriter(root_path, self.config.show_structure)
        writer.write(files, self.config.output_file)


def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    help_text = """
üöÄ CodeCollector - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞ –≤ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
  codecollector [–û–ü–¶–ò–ò] [–î–ò–†–ï–ö–¢–û–†–ò–Ø]

–û–ü–¶–ò–ò:
  -r, --remote         –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º: —Å–ø—Ä–æ—Å–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  --setup              –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–Ω–æ–≤–æ
  --quick              –ë—ã—Å—Ç—Ä—ã–π —Ä–µ–∂–∏–º: –≤—Å–µ —Ñ–∞–π–ª—ã –±–µ–∑ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
  --reset              –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–Ω–æ–≤–æ
  
  --help, -h           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  --debug              –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ä–µ–∂–∏–º

–†–ï–ñ–ò–ú–´ –†–ê–ë–û–¢–´:
  –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  –° —Ñ–ª–∞–≥–æ–º -r: —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–∞–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å (—É–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞)

–ü–†–ò–ú–ï–†–´:
  codecollector                           # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  codecollector --setup                  # –ó–∞–Ω–æ–≤–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
  codecollector --quick                  # –ë—ã—Å—Ç—Ä—ã–π —Å–±–æ—Ä –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
  codecollector --reset                  # –°–±—Ä–æ—Å–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–Ω–æ–≤–æ
  codecollector -r                       # –°–ø—Ä–æ—Å–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

–ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú:
  ‚Üë‚Üì - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥–µ—Ä–µ–≤—É —Ñ–∞–π–ª–æ–≤
  SPACE - –≤—ã–±—Ä–∞—Ç—å/—Å–Ω—è—Ç—å –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –∏–ª–∏ –ø–∞–ø–∫–∏
  ‚Üí‚Üê - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å/—Å–≤–µ—Ä–Ω—É—Ç—å –ø–∞–ø–∫—É
  A/N - –≤—ã–±—Ä–∞—Ç—å –≤—Å—ë/–Ω–∏—á–µ–≥–æ
  +/- - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å/—Å–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –ø–∞–ø–∫–∏
  R - —Å–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å—å –≤—ã–±–æ—Ä
  Q/ESC - –≤—ã—Ö–æ–¥
  ENTER - –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä

–ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ï–ö–¢–ê:
  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ .codecollector/<–∏–º—è_–ø—Ä–æ–µ–∫—Ç–∞>.json
  –í–∫–ª—é—á–∞—é—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤
  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ .gitignore

–§–ò–õ–¨–¢–†–ê–¶–ò–Ø:
  ‚Ä¢ –£—á–∏—Ç—ã–≤–∞–µ—Ç .gitignore —Ñ–∞–π–ª—ã
  ‚Ä¢ –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏ (node_modules, __pycache__, .git –∏ —Ç.–¥.)
  ‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∫–æ–¥–∞
  ‚Ä¢ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –∏ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

–§–û–†–ú–ê–¢ –í–´–í–û–î–ê:
  ‚Ä¢ –í—Å–µ–≥–¥–∞: collected_files.md –≤ Markdown —Ñ–æ—Ä–º–∞—Ç–µ
  ‚Ä¢ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤
  ‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –≤–∏–¥–µ –¥–µ—Ä–µ–≤–∞
  ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å –ø—É—Ç—è–º–∏ –∫ —Ñ–∞–π–ª–∞–º
"""
    print(help_text)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å–ø—Ä–∞–≤–∫–∏
    if any(arg in sys.argv for arg in ['--help', '-h', 'help']):
        show_help()
        return 0
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = CodeCollectorApp()
    return app.run()


if __name__ == "__main__":
    sys.exit(main())