#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
CodeCollector - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞ –≤ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
"""

import os
import sys
from pathlib import Path
from typing import List

# –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from codecollector.config import Config, ConfigManager
from codecollector.models import ProjectSettings
from codecollector.collector import CodeCollector
from codecollector.selector import InteractiveSelector
from codecollector.writers import MarkdownWriter, TextWriter


class CodeCollectorApp:
    """
    –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è CodeCollector
    –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, —Å–±–æ—Ä —Ñ–∞–π–ª–æ–≤, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä, –≤—ã–≤–æ–¥
    
    –ê—Ç—Ä–∏–±—É—Ç—ã:
    - config: Config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - project_settings: ProjectSettings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    - collector: CodeCollector - —Å–±–æ—Ä—â–∏–∫ —Ñ–∞–π–ª–æ–≤
    
    –ú–µ—Ç–æ–¥—ã:
    - run() -> int: –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
    - _get_source_directory() -> str: –ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    - _validate_source_path(source_path) -> bool: –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å
    - _interactive_file_selection(files, root_path) -> List[Path]: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä
    - _save_user_preferences(selected_files): –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - _write_output(files, root_path): –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–∞–π–ª
    """
    
    def __init__(self):
        self.config: Config = None
        self.project_settings: ProjectSettings = None
        self.collector: CodeCollector = None
        
    def run(self) -> int:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
        try:
            print("üöÄ CodeCollector - –°–±–æ—Ä—â–∏–∫ —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞")
            print("=" * 50)
            
            # 1. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
            # –ü–∞—Ä—Å–∏–º CLI –∞—Ä–≥—É–º–µ–Ω—Ç—ã
            self.config = ConfigManager.parse_cli_args()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            source_dir = self._get_source_directory()
            source_path = Path(source_dir)
            
            if not self._validate_source_path(source_path):
                return 1
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
            self.project_settings = ProjectSettings(source_path)
            
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            saved_settings_exist = self.project_settings.load_settings() is not None
            self.config = ConfigManager.merge_with_saved_settings(self.config, self.project_settings)
            
            # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            self.config = ConfigManager.interactive_config_setup(self.config, saved_settings_exist)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ–Ω—è–µ–º—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            ConfigManager.show_applied_config(self.config, saved_settings_exist)
            print()
            
            # 2. –°–ë–û–† –§–ê–ô–õ–û–í
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä
            self.collector = CodeCollector(source_path, self.config)
            
            # –°–æ–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª—ã
            collected_files = self.collector.scan_and_collect()
            
            if not collected_files:
                print("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
                return 0
            
            print()
            
            # 3. –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –í–´–ë–û–† (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            if self.config.interactive:
                selected_files = self._interactive_file_selection(collected_files, source_path)
                if not selected_files:
                    print("‚ùå –§–∞–π–ª—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                    return 0
                collected_files = selected_files
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                self._save_user_preferences(collected_files)
                print()
            
            # 4. –ó–ê–ü–ò–°–¨ –†–ï–ó–£–õ–¨–¢–ê–¢–ê
            print(f"üìù –û–±—Ä–∞–±–æ—Ç–∫–∞ {len(collected_files)} —Ñ–∞–π–ª–æ–≤...")
            self._write_output(collected_files, source_path)
            
            # 5. –£–°–ü–ï–®–ù–û–ï –ó–ê–í–ï–†–®–ï–ù–ò–ï
            format_info = "Markdown" if self.config.markdown_format else "—Ç–µ–∫—Å—Ç–æ–≤–æ–º"
            structure_info = " —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π" if self.config.show_structure else ""
            print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {format_info} —Ñ–æ—Ä–º–∞—Ç–µ{structure_info}:")
            print(f"üìÑ {self.config.output_file}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            try:
                file_size = Path(self.config.output_file).stat().st_size
                if file_size > 1024 * 1024:
                    size_str = f"{file_size / (1024 * 1024):.1f} MB"
                elif file_size > 1024:
                    size_str = f"{file_size / 1024:.1f} KB"
                else:
                    size_str = f"{file_size} bytes"
                print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_str}")
            except:
                pass
            
            return 0
            
        except KeyboardInterrupt:
            print("\n‚ö†Ô∏è  –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            return 1
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            if "--debug" in sys.argv:
                import traceback
                traceback.print_exc()
            return 1
    
    def _get_source_directory(self) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"""
        if self.config.source_dir:
            return self.config.source_dir
        
        print("üìÅ –í—ã–±–æ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        source_dir = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–∏–ª–∏ Enter –¥–ª—è —Ç–µ–∫—É—â–µ–π): ").strip()
        return source_dir if source_dir else os.getcwd()
    
    def _validate_source_path(self, source_path: Path) -> bool:
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å"""
        if not source_path.exists():
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {source_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return False
        
        if not source_path.is_dir():
            print(f"‚ùå –û—à–∏–±–∫–∞: {source_path} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π!")
            return False
        
        print(f"‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {source_path}")
        return True
    
    def _interactive_file_selection(self, files: List[Path], root_path: Path) -> List[Path]:
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤"""
        print("üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
        saved_files = []
        saved_folders = []
        
        settings = self.project_settings.load_settings()
        if settings:
            saved_files, saved_folders = self.project_settings.filter_existing_paths(
                settings.get('selected_files', []),
                settings.get('selected_folders', [])
            )
            if saved_files or saved_folders:
                print(f"üìã –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤—ã–±–æ—Ä: {len(saved_files)} —Ñ–∞–π–ª–æ–≤")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
        selector = InteractiveSelector(files, root_path, saved_files, saved_folders)
        selected_files = selector.run()
        
        if selected_files:
            print(f"‚úÖ –í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(selected_files)}")
        
        return selected_files
    
    def _save_user_preferences(self, selected_files: List[Path]):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è"""
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ–º –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
        # –≠—Ç–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        selected_folders_paths = []
        
        preferences = {
            'markdown_format': self.config.markdown_format,
            'show_structure': self.config.show_structure,
            'sort_by_time': self.config.sort_by_time,
            'default_output': self.config.output_file
        }
        
        self.project_settings.save_settings(preferences, selected_files, selected_folders_paths)
    
    def _write_output(self, files: List[Path], root_path: Path):
        """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª"""
        if self.config.markdown_format:
            writer = MarkdownWriter(root_path, self.config.show_structure)
        else:
            writer = TextWriter(root_path)
        
        writer.write(files, self.config.output_file)


def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    help_text = """
üöÄ CodeCollector - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞ –≤ –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
  codecollector [–û–ü–¶–ò–ò] [–î–ò–†–ï–ö–¢–û–†–ò–Ø] [–í–´–•–û–î–ù–û–ô_–§–ê–ô–õ]

–û–ü–¶–ò–ò:
  -i, --interactive     –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  -t, --time           –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
  -m, --markdown       –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown —Ñ–æ—Ä–º–∞—Ç —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
  -s, --structure      –í–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –≤—ã–≤–æ–¥ (—Ç–æ–ª—å–∫–æ —Å -m)
  
  --no-time            –û—Ç–∫–ª—é—á–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –∏–º–µ–Ω–∏)
  --no-markdown        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
  --no-structure       –ù–µ –≤–∫–ª—é—á–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
  
  --help, -h           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  --debug              –í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ä–µ–∂–∏–º

–ü–†–ò–ú–ï–†–´:
  codecollector                           # –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—É—Å–∫
  codecollector -i -m -s                 # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä, Markdown —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
  codecollector -t ./src output.md       # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞
  codecollector --no-markdown -i         # –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä

–ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú:
  ‚Üë‚Üì - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥–µ—Ä–µ–≤—É —Ñ–∞–π–ª–æ–≤
  SPACE - –≤—ã–±—Ä–∞—Ç—å/—Å–Ω—è—Ç—å –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –∏–ª–∏ –ø–∞–ø–∫–∏
  ‚Üí‚Üê - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å/—Å–≤–µ—Ä–Ω—É—Ç—å –ø–∞–ø–∫—É
  A/N - –≤—ã–±—Ä–∞—Ç—å –≤—Å—ë/–Ω–∏—á–µ–≥–æ
  +/- - —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å/—Å–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –ø–∞–ø–∫–∏
  F - –ø–æ–∏—Å–∫ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
  Q/ESC - –≤—ã—Ö–æ–¥
  ENTER - –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä

–ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ï–ö–¢–ê:
  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ .codecollector/<–∏–º—è_–ø—Ä–æ–µ–∫—Ç–∞>.json
  –í–∫–ª—é—á–∞—é—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤
  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ .gitignore

–§–ò–õ–¨–¢–†–ê–¶–ò–Ø:
  ‚Ä¢ –£—á–∏—Ç—ã–≤–∞–µ—Ç .gitignore —Ñ–∞–π–ª—ã
  ‚Ä¢ –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–ø–∫–∏ (node_modules, __pycache__, .git –∏ —Ç.–¥.)
  ‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∫–æ–¥–∞
  ‚Ä¢ –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –∏ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

–§–û–†–ú–ê–¢–´ –í–´–í–û–î–ê:
  ‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã–π: –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  ‚Ä¢ Markdown: –±–æ–≥–∞—Ç—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞
"""
    print(help_text)


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å–ø—Ä–∞–≤–∫–∏
    if any(arg in sys.argv for arg in ['--help', '-h', 'help']):
        show_help()
        return 0
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = CodeCollectorApp()
    return app.run()


if __name__ == "__main__":
    sys.exit(main())